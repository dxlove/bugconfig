DELETE from script_import;
INSERT INTO `script_import` VALUES ('import java.io.FileNotFoundException;\r\nimport java.net.URLEncoder;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.Timestamp;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.HashMap;\r\nimport java.util.HashSet;\r\nimport java.util.Iterator;\r\nimport java.util.LinkedHashMap;\r\nimport java.util.LinkedHashSet;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\nimport com.sogou.qadev.cache.impl.FieldNameCache;\r\nimport com.sogou.qadev.service.cynthia.bean.Action;\r\nimport com.sogou.qadev.service.cynthia.bean.Attachment;\r\nimport com.sogou.qadev.service.cynthia.bean.ChangeLog;\r\nimport com.sogou.qadev.service.cynthia.bean.Data;\r\nimport com.sogou.qadev.service.cynthia.bean.DataAccessAction;\r\nimport com.sogou.qadev.service.cynthia.bean.Field;\r\nimport com.sogou.qadev.service.cynthia.bean.Field.DataType;\r\nimport com.sogou.qadev.service.cynthia.bean.Field.Type;\r\nimport com.sogou.qadev.service.cynthia.bean.Filter;\r\nimport com.sogou.qadev.service.cynthia.bean.Flow;\r\nimport com.sogou.qadev.service.cynthia.bean.IMEBugSolveStaticBean;\r\nimport com.sogou.qadev.service.cynthia.bean.Option;\r\nimport com.sogou.qadev.service.cynthia.bean.Option.Forbidden;\r\nimport com.sogou.qadev.service.cynthia.bean.SmtAssignUserBug;\r\nimport com.sogou.qadev.service.cynthia.bean.Stat;\r\nimport com.sogou.qadev.service.cynthia.bean.TechActualProcessStatistic;\r\nimport com.sogou.qadev.service.cynthia.bean.TechAssignStatistic;\r\nimport com.sogou.qadev.service.cynthia.bean.TechEfficiencyNotWorkTime;\r\nimport com.sogou.qadev.service.cynthia.bean.TechEfficiencyStatic;\r\nimport com.sogou.qadev.service.cynthia.bean.TechEfficiencyWorkTime;\r\nimport com.sogou.qadev.service.cynthia.bean.Template;\r\nimport com.sogou.qadev.service.cynthia.bean.UUID;\r\nimport com.sogou.qadev.service.cynthia.bean.UserInfo;\r\nimport com.sogou.qadev.service.cynthia.dao.DataAccessSessionMySQL;\r\nimport com.sogou.qadev.service.cynthia.dao.UserInfoAccessSessionMySQL;\r\nimport com.sogou.qadev.service.cynthia.factory.DataAccessFactory;\r\nimport com.sogou.qadev.service.cynthia.service.DataAccessSession;\r\nimport com.sogou.qadev.service.cynthia.service.DataAccessSession.ErrorCode;\r\nimport com.sogou.qadev.service.cynthia.service.DbPoolConnection;\r\nimport com.sogou.qadev.service.cynthia.service.MailSender;\r\nimport com.sogou.qadev.service.cynthia.service.TableRuleManager;\r\nimport com.sogou.qadev.service.cynthia.service.TechStatisticManager;\r\nimport com.sogou.qadev.service.cynthia.statistic.TechStatistic;\r\nimport com.sogou.qadev.service.cynthia.util.ConfigUtil;\r\nimport com.sogou.qadev.service.cynthia.util.CynthiaUtil;\r\nimport com.sogou.qadev.service.cynthia.util.Date;\r\nimport com.sogou.qadev.service.cynthia.bean.Pair;\r\nimport com.sogou.qadev.service.cynthia.util.XMLUtil;');

delete from script_new ;
         
INSERT INTO `script_new` VALUES ('722793', '邮件通知指派人', 'liming@sogou-inc.com', '2014-02-25 20:34:13', null, '191663,633090,659696,667291,653829,675815,676752,672821,2436,699968,3422,3143,129275,177132,1753,157271,5278,1555,4186,3242,5507,2655,4573,269804,4022,5153,273668,5762,193456,4364,721432,724570,733522,708559,727341,744218,744313', null, null, null, '191543,191542,191541,451062,451063,191540,191539,326239,191538,451149,191537,191536,451068,451069,451070,451064,191546,451065,191545,451066,191544,451067,191526,191527,191534,191535,191532,191533,191530,191531,268398,268397,191528,191529,201904,201905,326241,326240,633106,667651,667652,667653,667654,667655,653167,653166,653165,653164,653163,653129,653162,653161,653130,653176,653174,653175,653172,653173,653170,653168,653169,675670,675664,675667,675677,675663,675679,675675,673757,673756,673759,673758,673752,673751,673783,673782,673781,673780,673779,673778,673777,673776,673775,673772,673773,673770,673768,673769,673766,673767,673765,673762,673763,673760,673761,175290,550,551,175291,175288,548,175289,549,546,175294,547,175295,175292,544,545,175293,209768,554,555,552,553,175275,175274,175273,175272,134522,175277,175276,134479,212134,212133,134466,134467,533,165625,165626,535,534,136072,212149,541,540,136070,543,542,537,536,539,538,142688,134459,134463,165632,134462,165633,134461,134460,135271,135270,135272,175308,142686,176121,176124,175305,175304,175307,175306,175301,142679,175300,175303,175302,175297,175296,176118,175299,176119,175298,699992,699933,699928,699929,699930,699931,175248,829,831,830,175252,201978,834,179751,835,129446,832,833,838,839,836,837,842,843,175265,840,841,176117,175208,175268,129249,129248,129251,129250,129253,129252,129254,129262,130633,145507,145504,129246,129247,177123,177119,177118,177117,746,745,744,739,738,743,742,741,740,157260,158779,157256,157257,157258,157259,157255,157931,157450,157930,157929,157935,157604,157934,157235,157234,157233,157301,157300,157232,125341,125340,383,125342,382,395,149168,394,393,392,396,387,386,385,384,391,390,389,388,463,462,130903,461,460,703629,466,464,465,269809,269808,269811,269813,269812,269899,269814,269825,269824,269816,269819,269826,269818,269821,269820,269823,269822,353631,273664,353634,353633,273663,353632,1045,721427,721426,724577,724578,724579,724580,724581,724574,724572,734740,730362,730363,746366,659645,659647,727320,727321,722544,721425,659644,748996,286497,659643,744211,744214,744302,744301,744300,744299,744298,744290', null, '1', '0', '1', '0', '0', 'String downLoadUrl = ConfigUtil.getCynthiaWebRoot()+ \"attachment/download.jsp?method=download&id=\";\nString referUrl = ConfigUtil.getCynthiaWebRoot()+\"taskManagement.html?operation=read&taskid=\";\n\nTemplate template = das.queryTemplate(data.getTemplateId());\nif(template == null)\n	return;\n\nFlow flow = das.queryFlow(template.getFlowId());\nif (flow == null) {\n	return;\n}\n\nStat stat = flow.getStat(data.getStatusId());\nif(stat == null)\n	return;\n\n//判断指派人是否变化	\nboolean isAssignUserChange = false;\nChangeLog[] allChangeLogs = data.getChangeLogs();\nif (allChangeLogs == null || allChangeLogs.length ==0 ) {\n	return;\n}\n\nboolean isNewTask = true; //是否是新建任务\nif (flow.getAction(data.getActionId()) == null || flow.getAction(data.getActionId()).getBeginStatId() != null) {  //编辑时动作为null\n	isNewTask = false;\n}\n\nChangeLog lastChangeLog = allChangeLogs[allChangeLogs.length-1];\njava.util.Map map = lastChangeLog.getBaseValueMap();\nif (map.get(\"assignUser\") != null) {\n	isAssignUserChange = true;\n}\n                              \nif (!isAssignUserChange) {\n	return;\n}\n\nAction action = flow.getAction(data.getActionId());\nMailSender sender = new MailSender();\n\nsender.setHtml( true );\nsender.setSmtp( \"transport.mail.sogou-inc.com\" );\nsender.setEncode( \"GBK\" );\n\nsender.setFromUser(data.getString(\"logCreateUser\"));\n\nSet toUserSet = new HashSet();\nif (data.getAssignUsername() != null && data.getAssignUsername().length() > 0) {\n	toUserSet.add(data.getAssignUsername());\n}\n\nString[] toUser = (String[]) toUserSet.toArray(new String[toUserSet.size()]);\nif(toUser == null || toUser.length == 0)\n	return;\nsender.setToUsers(toUser);\n\n\n\nif (isAssignUserChange) {\n	sender.setSubject(\"[Cynthia]-[\"+data.getId().toString()+\"]有需求指派给您，请及时处理\");\n}else {\n	sender.setSubject(\"[Cynthia]-[\"+data.getId().toString()+\"]您名下的需求有变更，请关注\");\n}\n\nStringBuffer html = new StringBuffer();\nhtml.append(\"<html>\");\nhtml.append(\"<head>\");\nhtml.append(\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=GBK\\\"/>\");\nhtml.append(\"<style type=\\\"text/css\\\">\");\nhtml.append(\"table{border:1px #E1E1E1 solid;}\");\nhtml.append(\"td{border:1px #E1E1E1 solid;padding:10px;}\");\nhtml.append(\".tdcolor{background-color:#fedcbd}\");\nhtml.append(\".tdcolor2{background-color:#84bf96}\");\nhtml.append(\"h3{color:red;margin-top:40px}\");\nhtml.append(\"h4{color:blue;}\");\nhtml.append(\"h5{margin-left:80px}\");\nhtml.append(\"th{border:1px #E1E1E1 solid;padding:10px;}\");\nhtml.append(\"tr {font-size: 15px; COLOR:#000000; background-color:#FFFFFF; font-family: Tahoma; text-align:left;}\");\nhtml.append(\"</style>\");\nhtml.append(\"</head>\");\nhtml.append(\"<body>\");\nhtml.append(\"<h4>基本信息</h4>\");\n\nString logActionUserName = data.getActionUser();\nUserInfo userInfo = das.queryUserInfoByUserName(logActionUserName);\nif (userInfo != null ) {\n	logActionUserName = userInfo.getNickName();\n}\nhtml.append(\"<table>\");\nhtml.append(\"<tr><td class=\\\"tdcolor\\\">\").append(\"标题\").append(data.getId().toString()).append(\"</td><td colspan=\\\"5\\\">\").append(\"<a href=\\\"\" + ConfigUtil.getCynthiaWebRoot() + \"taskManagement.html?operation=read&taskid=\" + data.getId().toString() + \"\\\">\" + com.sogou.qadev.service.cynthia.util.XMLUtil.toSafeXMLString(data.getTitle()) +\"</a>\").append(\"</td></tr>\");\nhtml.append(\"<tr><td class=\\\"tdcolor\\\">\").append(\"执行动作\").append(\"</td><td>\").append((action == null ? \"编辑\" : com.sogou.qadev.service.cynthia.util.XMLUtil.toSafeXMLString(action.getName()))).append(\"</td>\");\nhtml.append(\"<td class=\\\"tdcolor\\\">\").append(\"执行人\").append(\"</td><td>\").append(com.sogou.qadev.service.cynthia.util.XMLUtil.toSafeXMLString(logActionUserName)).append(\"</td>\");\nhtml.append(\"<td class=\\\"tdcolor\\\">\").append(\"状态\").append(\"</td><td>\").append(com.sogou.qadev.service.cynthia.util.XMLUtil.toSafeXMLString(stat.getName())).append(\"</td></tr>\");\nhtml.append(\"</table>\");\n\nhtml.append(\"<h4>字段变更信息</h4>\");\n\nhtml.append(\"<table>\");\n\nif (isNewTask) {\n	html.append(\"<tr>\").append(\"<th class=\\\"tdcolor2\\\">\").append(\"字段\").append(\"</th>\")\n.append(\"<th class=\\\"tdcolor2\\\">\").append(\"新建内容\").append(\"</th></tr>\");\n}else {\n	html.append(\"<tr>\").append(\"<th class=\\\"tdcolor2\\\">\").append(\"字段\").append(\"</th>\")\n.append(\"<th class=\\\"tdcolor2\\\">\").append(\"修改之后\").append(\"</th>\")\n.append(\"<th class=\\\"tdcolor2\\\">\").append(\"修改之前\").append(\"</th></tr>\");\n}\n\nMap baseValueMap = lastChangeLog.getBaseValueMap();\nIterator baseIterator = baseValueMap.entrySet().iterator();\nwhile(baseIterator.hasNext()){\n	Map.Entry entry = (Map.Entry)baseIterator.next();\n	\n	String fieldName = \"\";\nStringBuffer before = new StringBuffer();\nStringBuffer after = new StringBuffer();\n\nString key = entry.getKey().toString();\nPair pair = (Pair)entry.getValue();\nif (pair == null) \n	continue;\n\nif (key.equals(\"title\")) {\n	fieldName = \"标题\";\n	before.append(pair.getFirst()==null?\"\":pair.getFirst());\n	after.append(pair.getSecond()==null?\"\":pair.getSecond());\n}else if (key.equals(\"description\")) {\n	\n	fieldName = \"描述\";\n	\n	if (pair.getFirst() == null) {\n		before.append(\"\");\n	}else {\n		String content = pair.getFirst().toString();\n		before.append(content);\n	}\n	\n	if (pair.getSecond() == null) {\n		after.append(\"\");\n	}else {\n		String content = pair.getSecond().toString();\n		after.append(content);\n	}\n\n}else if (key.equals(\"assignUser\")) {\n	fieldName = \"指派人\";\n	if (pair.getFirst()==\"\" || pair.getFirst() == null) {\n		before.append(\"\");\n	}else {				\n		userInfo = das.queryUserInfoByUserName(pair.getFirst().toString());\n		before.append(userInfo == null ? pair.getFirst().toString() : userInfo.getNickName());	\n	}\n	\n	if (pair.getSecond()==\"\" || pair.getSecond() == null) {\n		after.append(\"\");\n	}else {\n		userInfo = das.queryUserInfoByUserName(pair.getSecond().toString());\n		after.append(userInfo == null ? pair.getSecond().toString() : userInfo.getNickName());	\n	}\n\n}else if (key.equals(\"statusId\")) {\n	fieldName = \"状态\";\n	if (pair.getFirst() == \"\" || pair.getFirst() == null) {\n		before.append(\"\");	\n	}else {\n		before.append(flow.getStat(DataAccessFactory.getInstance().createUUID(pair.getFirst().toString())).getName());	\n	}\n	if (pair.getSecond() == \"\" || pair.getSecond() == null) {\n		after.append(\"\");	\n	}else {\n		after.append(flow.getStat(DataAccessFactory.getInstance().createUUID(pair.getSecond().toString())).getName());	\n	}\n}\nif (isNewTask) \n	html.append(\"<tr><td class=\\\"tdcolor\\\">\").append(fieldName).append(\"</td><td>\").append(after.toString()).append(\"</td></tr>\");\nelse \n	html.append(\"<tr><td class=\\\"tdcolor\\\">\").append(fieldName).append(\"</td><td>\").append(after.toString()).append(\"</td><td>\").append(before.toString()).append(\"</td></tr>\");\n}\n\n\nMap extValueMap = lastChangeLog.getExtValueMap();\nIterator extIterator = extValueMap.entrySet().iterator();\nwhile(extIterator.hasNext()){\n	Map.Entry entry = (Map.Entry)extIterator.next();\n	UUID keyUUID = (UUID)entry.getKey();\n	Pair pair = (Pair)entry.getValue();\n	if (pair == null || keyUUID == null) \n		continue;\n	\n	Field tmpField = das.queryField(keyUUID);\n	String fieldName = \"\";\nStringBuffer before = new StringBuffer();\nStringBuffer after = new StringBuffer();\n\nif (tmpField == null) {\n	continue;\n}\nfieldName = tmpField.getName();\n\nif (pair.getFirst() != null) {\n\n		if (tmpField.getType() == Type.t_selection) {\n			String[] optionIdStrArray = pair.getFirst().toString().split(\"\\\\,\");\n			for(String optionIdStr : optionIdStrArray){\n				UUID optionId = DataAccessFactory.getInstance().createUUID(optionIdStr);\n				Option option = tmpField.getOption(optionId);\n				if(option == null){\n					continue;\n				}\n				if(before.length() > 0){\n					before.append(\",\");\n				}\n				before.append(option.getName());\n			}\n		}else if (tmpField.getType() == Type.t_reference) {\n			String[] referIdArray = pair.getFirst().toString().split(\"\\\\,\");\n			for(String referId : referIdArray){\n				Data refer = das.queryData(DataAccessFactory.getInstance().createUUID(referId));\n				if (refer != null) {\n					before.append(before.length() > 0 ? \",\" :\"\").append(\"<a href=\\\"\").append(referUrl+refer.getId().toString()).append(\"\\\">\").append(refer.getTitle()).append(\"</a>\");\n				}\n			}\n			\n		}else if (tmpField.getType() == Type.t_attachment) {\n\n			UUID[] attachIdArray = (UUID[])pair.getFirst();\n			Attachment[] attachArray = das.queryAttachments(attachIdArray, false);\n			for(Attachment attach : attachArray){\n				if(before.length() > 0){\n					before.append(\"<br />\");\n				}\n				before.append(\"<a href=\\\"\").append(downLoadUrl+attach.getId().toString()).append(\"\\\">\").append(attach.getName()).append(\"</a>\");\n			}\n		}else {\n			String content = pair.getFirst().toString();\n			before.append(content);\n		}\n} // end for if (pair.getFirst() != null) {\n\nif (pair.getSecond() != null) {\n		if (tmpField.getType() == Type.t_selection) {\n			String[] optionIdStrArray = pair.getSecond().toString().split(\"\\\\,\");\n			for(String optionIdStr : optionIdStrArray){\n				UUID optionId = DataAccessFactory.getInstance().createUUID(optionIdStr);\n				Option option = tmpField.getOption(optionId);\n				if(option == null){\n					continue;\n				}\n				if(after.length() > 0){\n					after.append(\",\");\n				}\n				after.append(option.getName());\n			}\n		}else if (tmpField.getType() == Type.t_reference) {\n			\n			String[] referIdArray = pair.getSecond().toString().split(\"\\\\,\");\n			for(String referId : referIdArray){\n				Data refer = das.queryData(DataAccessFactory.getInstance().createUUID(referId));\n				if (refer != null) {\n					after.append(after.length() > 0 ? \",\" :\"\").append(\"<a href=\\\"\").append(referUrl+refer.getId().toString()).append(\"\\\">\").append(refer.getTitle()).append(\"</a>\");\n				}\n			}\n			\n		}else if (tmpField.getType() == Type.t_attachment) {\n			UUID[] attachIdArray = (UUID[])pair.getSecond();\n			\n			Attachment[] attachArray = das.queryAttachments(attachIdArray, false);\n			\n			for(Attachment attach : attachArray){\n				if(after.length() > 0){\n					after.append(\"<br />\");\n				}\n				after.append(\"<a href=\\\"\").append(downLoadUrl+attach.getId().toString()).append(\"\\\">\").append(attach.getName()).append(\"</a>\");\n			}\n		}else {\n			String content = pair.getSecond().toString();\n			after.append(content);\n		}\n} // end for if (pair.getSecond() != null) {\n\nif (isNewTask) \n	html.append(\"<tr><td class=\\\"tdcolor\\\">\").append(fieldName).append(\"</td><td>\").append(after.toString()).append(\"</td></tr>\");\nelse \n	html.append(\"<tr><td class=\\\"tdcolor\\\">\").append(fieldName).append(\"</td><td>\").append(after.toString()).append(\"</td><td>\").append(before.toString()).append(\"</td></tr>\");\n}\n\nhtml.append(\"</table>\");\nhtml.append(\"</body>\");\nhtml.append(\"</html>\");\n\nString sendHtml =  html.toString();\nsendHtml = sendHtml.replace(\"</tr>\", \"</tr>\\n\");\nsender.setContent(sendHtml);\nsender.sendHtmlEx(\"GBK\");', '1', '1', '0', '*');
